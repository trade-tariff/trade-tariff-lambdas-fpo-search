frameworkVersion: "3"
service: trade-tariff-lambdas-fpo-search

plugins:
  - serverless-domain-manager

provider:
  name: aws
  region: eu-west-2
  runtime: provided
  stage: ${env:STAGE}
  timeout: 29
  memorySize: 3072

  logs:
    restApi:
      accessLogging: true
      executionLogging: false
      fullExecutionData: false
      format:
        '{
          "requestId":"$context.requestId",
          "ip": "$context.identity.sourceIp",
          "requestTime": "$context.requestTime",
          "httpMethod": "$context.httpMethod",
          "resourcePath": "$context.resourcePath",
          "status": "$context.status",
          "responseLength": "$context.responseLength"
        }'

  deploymentBucket:
    name: "trade-tariff-lambda-deployment-${aws:accountId}"

  ecr:
    images:
      fpo-search:
        uri: "${env:FPO_SEARCH_ECR_URL}:${env:DOCKER_TAG}"

  stackTags:
    customer: "fpo"
  tags:
    customer: "fpo"

  apiGateway:
    usagePlan:
      - apiStages:
          - api: ${self:service}-${env:STAGE}
            stage: ${env:STAGE}

functions:
  fpo_search:
    provisionedConcurrency: ${param:provisioned_concurrency}
    image: fpo-search
    events:
      - http:
          path: /fpo-code-search
          method: post
          private: true
      - http:
          path: /healthcheck
          method: get
          private: false

custom:
  customDomain:
    domainName: ${param:custom_domain}
    stage: ${env:STAGE}
    basePath: ""
    certificateName: ${param:certificate_domain}
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: "regional"
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: true
  logRetentionInDays:
    development: 7
    staging: 14
    production: 30

resources:
  Resources:
    # AWS/Lambda Errors are triggered for:
    #
    # - Unhandled exceptions thrown by the Lambda function.
    # - Timeouts (when your function execution exceeds the configured timeout).
    # - Out of memory errors (when your function uses more memory than allocated).
    # - Permissions or configuration errors that prevent a function from running.
    ErrorAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: "Alarm if FPO search function errors exceed a threshold"
        Namespace: "AWS/Lambda"
        MetricName: "Errors"
        Dimensions:
          - Name: "FunctionName"
            Value: ${self:service}-${env:STAGE}-fpo_search
        Statistic: Sum
        Period: 300 # 5 minutes
        EvaluationPeriods: 1
        Threshold: 1
        ComparisonOperator: GreaterThanOrEqualToThreshold
        AlarmActions:
          - arn:aws:sns:${self:provider.region}:${aws:accountId}:slack-topic
        TreatMissingData: notBreaching

    DurationAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: "Alarm when FPO search function execution duration exceeds threshold"
        Namespace: "AWS/Lambda"
        MetricName: "Duration"
        Dimensions:
          - Name: "FunctionName"
            Value: ${self:service}-${env:STAGE}-fpo_search
        Statistic: Average
        Period: 300 # 5 minutes
        EvaluationPeriods: 1
        Threshold: 50000 # 50 seconds for a cold start of a lambda
        ComparisonOperator: GreaterThanOrEqualToThreshold
        AlarmActions:
          - arn:aws:sns:${self:provider.region}:${aws:accountId}:slack-topic
        TreatMissingData: notBreaching

    ApiGatewayLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/api-gateway/${self:service}-${env:STAGE}
        RetentionInDays: ${self:custom.logRetentionInDays.${env:STAGE}, 14}

    FpoUnderscoresearchLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${env:STAGE}-fpo_search
        RetentionInDays: ${self:custom.logRetentionInDays.${env:STAGE}, 14}