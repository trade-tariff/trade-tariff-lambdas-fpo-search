#!/usr/bin/env bash

[[ "$TRACE" ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail

FORCE=false
OLD_VERSION=""
NEW_VERSION=""

while [[ "$#" -gt 0 ]]; do
    case $1 in
        --force) FORCE=true ;;
        --old-version) OLD_VERSION="$2"; shift ;;
        --new-version) NEW_VERSION="$2"; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

MODEL_BUCKET_NAME=trade-tariff-models-382373577178
DIFF=$(git diff origin/main search-config.toml)

if [[ -n "$OLD_VERSION" && -n "$NEW_VERSION" ]]
then
  echo "Fetching latest specified versions $OLD_VERSION and $NEW_VERSION"
  LATEST_OLD_VERSION=$(.github/bin/getversions 1 "$OLD_VERSION")
  LATEST_NEW_VERSION=$(.github/bin/getversions 1 "$NEW_VERSION")
elif [[ -z "$DIFF" ]]
then
  if [[ "$FORCE" == "true" ]]
  then
    echo "Forcing fetching benchmarks"
    LATEST_OLD_VERSION=$(.github/bin/getversions 2 | head -n 1)
    LATEST_NEW_VERSION=$(.github/bin/getversions 2 | tail -n 1)
  else
    echo "No changes in search-config.toml"
    exit 0
  fi
else
  OLD_VERSION=$(git diff origin/main search-config.toml | grep '\-version' | awk '{print $3}' | sed 's/"//g')
  NEW_VERSION=$(git diff origin/main search-config.toml | grep '+version' | awk '{print $3}' | sed 's/"//g')
  LATEST_OLD_VERSION=$(.github/bin/getversions 1 "$OLD_VERSION")
  LATEST_NEW_VERSION=$(.github/bin/getversions 1 "$NEW_VERSION")
fi

function fetch_benchmarks() {
  mkdir -p old_benchmark
  mkdir -p new_benchmark

  aws s3 cp s3://"$MODEL_BUCKET_NAME"/"$LATEST_OLD_VERSION"/benchmark_results.zip old_benchmark/
  aws s3 cp s3://"$MODEL_BUCKET_NAME"/"$LATEST_NEW_VERSION"/benchmark_results.zip new_benchmark/

  unzip -qq -o old_benchmark/benchmark_results.zip -d old_benchmark
  unzip -qq -o new_benchmark/benchmark_results.zip -d new_benchmark

  echo "$LATEST_OLD_VERSION" > old_benchmark/version.txt
  echo "$LATEST_NEW_VERSION" > new_benchmark/version.txt
}

fetch_benchmarks
