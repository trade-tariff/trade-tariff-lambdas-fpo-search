#!/usr/bin/env bash

[[ "$TRACE" ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
set -o noclobber

# NOTE: These numbers were worked out by heuristics and do not represent an SLA
URL=${1:-https://search.dev.trade-tariff.service.gov.uk/fpo-code-search}
API_KEY=${2:-$API_KEY}
DESIRED_RPS=50
DESIRED_ERRORS=0
DESIRED_P90_LATENCY=2000

if [ "$API_KEY" = "" ]; then
  echo "API_KEY is not set"
  exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
  echo "jq is not installed"
  exit 1
fi

echo "ü§ñ Running performance test on $URL"
PERFORMANCE_DATA=$(
  npx --yes \
    autocannon@7.15.0 \
    --duration 30 \
    --connections 50 \
    --method POST \
    --headers "X-Api-Key=$API_KEY" \
    --body "{\"description\":\"fish milkshake\"}" \
    "$URL" \
    --json \
    2>/dev/null | grep url
)

ACTUAL_RPS=$(jq '.requests.mean' <<< "$PERFORMANCE_DATA")
ACTUAL_ERRORS=$(jq '.non2xx' <<< "$PERFORMANCE_DATA")
ACTUAL_P90_LATENCY=$(jq '.latency.p90' <<< "$PERFORMANCE_DATA")

MEET_RPS_THRESHOLD=$(awk 'BEGIN {print ('"$ACTUAL_RPS"' >= '"$DESIRED_RPS"') ? 1 : 0}')
MEET_P90_THRESHOLD=$(awk 'BEGIN {print ('"$ACTUAL_P90_LATENCY"' <= '"$DESIRED_P90_LATENCY"') ? 1 : 0}')
MEET_ERRORS_THRESHOLD=$(awk 'BEGIN {print ('"$ACTUAL_ERRORS"' == '"$DESIRED_ERRORS"') ? 1 : 0}')

echo "‚ÑπÔ∏è  RPS: $ACTUAL_RPS, Desired: >= $DESIRED_RPS"
echo "‚ÑπÔ∏è  Errors: $ACTUAL_ERRORS, Desired: == $DESIRED_ERRORS"
echo "‚ÑπÔ∏è  P90 Latency: $ACTUAL_P90_LATENCY, Desired: <= $DESIRED_P90_LATENCY"

if [ "$MEET_RPS_THRESHOLD" -eq 0 ]; then
  echo "üí£ Average requests per second is below $DESIRED_RPS: $ACTUAL_RPS"
  echo "$PERFORMANCE_DATA" | jq
  exit 1
fi

if [ "$MEET_P90_THRESHOLD" -eq 0 ]; then
  echo "üí£ P90 latency exceeds $DESIRED_P90_LATENCY ms: $ACTUAL_P90_LATENCY ms"
  echo "$PERFORMANCE_DATA" | jq
  exit 1
fi

if [ "$MEET_ERRORS_THRESHOLD" -eq 0 ]; then
  echo "üí£ $ACTUAL_ERRORS errors and ""$DESIRED_ERRORS expected"
  echo "$PERFORMANCE_DATA" | jq
  exit 1
fi

echo "üöÄ Performance test passed"
