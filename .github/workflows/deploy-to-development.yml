name: deploy-to-development

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  PYTHON_VERSION: 3.11

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Ruff
        run: pip install ruff==0.1.6

      - name: Run Linting
        run: ruff check .

  test:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --extra-index-url https://download.pytorch.org/whl/cpu -r requirements.txt
          pip install dill

      - name: Run Tests
        run: python -m unittest -v -b

  build-ami:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-Build-Ami-Role
          aws-region: us-east-1

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch main branch (for needsmodel comparison)
        run: git fetch origin main:refs/remotes/origin/main

      - name: Run the scripts
        run: .github/bin/buildami

  build-model:
    needs: build-ami
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-FPO-Models-Role
          aws-region: eu-west-2
          role-duration-seconds: 7200

      - name: Checkout Repository and fetch git history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch main branch (for needsmodel comparison)
        run: git fetch origin main:refs/remotes/origin/main

      - name: Run the scripts
        run: .github/bin/buildmodel

  validate-model:
    needs: build-model
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-FPO-Models-Role
          aws-region: eu-west-2

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch main branch (for needsmodel comparison)
        run: git fetch origin main:refs/remotes/origin/main

      - run: |
          python -m venv venv
          source venv/bin/activate
          pip install toml

      - run: .github/bin/validatemodel
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build:
    needs: validate-model
    runs-on: ubuntu-latest
    env:
      FPO_SEARCH_ECR_URL: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-fpo-search-production
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-Serverless-Lambda-Role
          aws-region: eu-west-2

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install requests==2.32.0

      - run: .github/bin/fetchmodel development

      - run: .github/bin/download_search_references

      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - uses: trade-tariff/trade-tariff-tools/.github/actions/build-and-push@main
        with:
          ecr-url: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-fpo-search-production
          ref: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-Serverless-Lambda-Role

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::844815912454:role/GithubActions-Serverless-Lambda-Role
          aws-region: eu-west-2

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - run: npm install -g serverless@3

      - run: npm install -g serverless-domain-manager

      - id: docker-tag
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - run: make deploy-development
        env:
          STAGE: development
          DOCKER_TAG: ${{ steps.docker-tag.outputs.DOCKER_TAG }}
          FPO_SEARCH_ECR_URL: 382373577178.dkr.ecr.eu-west-2.amazonaws.com/tariff-fpo-search-production

  start-dev-hub:
    runs-on: ubuntu-latest
    steps:
      - uses: trade-tariff/trade-tariff-tools/.github/actions/start-services@main
        with:
          service-names: dev-hub
          environment: development

  e2etest:
    needs:
      - start-dev-hub
      - deploy
    uses: trade-tariff/trade-tariff-tools/.github/workflows/e2e-fpo-tests.yml@main
    with:
      test-environment: development
    secrets:
      scp-username: ${{ secrets.SCP_USERNAME }}
      scp-password: ${{ secrets.SCP_PASSWORD }}

  smoketest:
    needs: deploy
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4

      - run: .github/bin/smoketest https://search.dev.trade-tariff.service.gov.uk ${{ secrets.SMOKETEST_API_KEY }}

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - id: result
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "result=success" >> "$GITHUB_OUTPUT"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
          fi
      - uses: trade-tariff/trade-tariff-tools/.github/actions/slack-notify@main
        with:
          result: ${{ steps.result.outputs.result }}
          slack_webhook: ${{ secrets.SLACK_WEBHOOK }}

  merge-pr:
    needs: deploy
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'automated-build-model') && needs.deploy.result == 'success'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: gh pr merge ${{ github.event.pull_request.number }} --delete-branch --admin --merge
        env:
          GH_TOKEN: ${{ secrets.PULL_REQUEST_PAT }}

  close-pr:
    needs: deploy
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'automated-build-model') && needs.deploy.result != 'success'
    steps:
      - uses: actions/checkout@v4
      - run: gh pr close ${{ github.event.pull_request.number }} --delete-branch --comment "This PR due a a model validation failure. Please check the logs for more details."
        env:
          GH_TOKEN: ${{ secrets.PULL_REQUEST_PAT }}
