#!/usr/bin/env bash

[[ "$TRACE" ]] && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
set -o noclobber

MODEL_KEY=$(.circleci/bin/getmodel)
VERSION_PREFIX=$(echo "$MODEL_KEY" | awk -F/ '{print $1}')
MODEL_BUCKET_NAME=trade-tariff-models-382373577178

function check_validation() {
  if aws s3 ls "s3://$MODEL_BUCKET_NAME/$VERSION_PREFIX/passed" 2>&1 | grep -q 'passed'; then
    echo "Model has already passed validation"
    exit 0
  fi
}

function notify_slack() {
  local status=$1
  local message=$2
  local color=${3:-good}
  local channel=${4:-#benchmarks}

  payload=$(
    jq -n \
      --arg status "$status" \
      --arg message "$message" \
      --arg color "$color" \
      --arg channel "$channel" \
      '{status: $status, message: $message, color: $color, channel: $channel}'
  )
  echo "$payload"

  # curl -X POST --data-urlencode "payload=$payload" "$SLACK_WEBHOOK_URL"
}

function mark_model() {
  result=$1
  echo -n "" | aws s3 cp - "s3://$MODEL_BUCKET_NAME/$VERSION_PREFIX/$result"
}

function mark_model_failed() {
  mark_model "failed"
}

function mark_model_passed() {
  mark_model "passed"
}

function handle_result() {
  aws s3 cp check_result.json "s3://$MODEL_BUCKET_NAME/$VERSION_PREFIX/check_result.json"
  any_highs=$(cat check_result.json | jq '.high | any')
  any_mediums=$(cat check_result.json | jq '.medium | any')

  if [[ "$any_highs" == "true" ]]; then
    echo "High threshold breaches detected"
    notify_slack "High threshold breaches detected" "$(cat check_result.json | jq '.high | to_entries | map("\(.value)") | join("\n")')" danger
    mark_model_failed
    exit 1
  elif [[ "$any_mediums" == "true" ]]; then
    echo "Medium threshold breaches detected"
    notify_slack "Medium threshold breaches detected" "$(cat check_result.json | jq '.medium | to_entries | map("\(.value)") | join("\n")')" warning
    mark_model_failed
    exit 0
  else
    echo "No threshold breaches detected"
    notify_slack "No threshold breaches detected" "All benchmarks are within thresholds" good
    exit 0
  fi
}

check_validation
.circleci/bin/fetchbenchmarks
.circleci/bin/checkbenchmarks
handle_result
